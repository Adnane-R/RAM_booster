#Convert input to lowercase
toLower() 
{
	echo $@ | tr "[:upper:]" "[:lower:]" 
}

#Ask user if he really wants to uninstall
#Note: Does NOT actually uninstall - that would be the
#	Uninstall_RAM_Booster function
Uninstall_Prompt() {
	echo "This will delete your RAM Session completely!"
	read -p "Would you like to proceed with the uninstall? [y/N]: " answer

	#Convert answer to lowercase
	answer=$(toLower $answer)

	case $answer in
		y|yes)
			Uninstall_RAM_Booster
			exit 0
			;;  
		*) 
			echo "Uninstall Cancelled"
			exit 0
			;;  
	esac
}

#Actually uninstalls the RAM Session
Uninstall_RAM_Booster() {
	echo Uninstalling...
}

#Allows usage of "ECHO" instead of "echo"
#for long sentences that need to be wrapped
ECHO() {
	echo "$@" | fmt -w `tput cols`
}

#Ask user what device he wants to use for /home
Ask_User_About_Home() {
	#Ask user which partition to use for /home
	clear
	ECHO "Which partition do you want to use as /home?"
	read -p "Your choice: " -e HOME_DEV

	#Check if device exists
	if [[ ! -b "$HOME_DEV" ]]
	then
		echo
		ECHO "\"$HOME_DEV\" is not a valid device. Please rerun the script and specify the device name of a partition or logical volume."
		echo "Exiting..."
		exit 1
	fi

	#Make sure the device is a partition (not an entire physical drive) or a logical volume
	if ! (echo $HOME_DEV | grep -q '/dev/sd[a-z][0-9]') && ! (sudo lvdisplay $HOME_DEV &>/dev/null)
	then
		echo
		ECHO "\"$HOME_DEV\" is neither a partition, nor a logical volume. Please rerun the script and specify the device name of a partition or logical volume."
		echo "Exiting..."
		exit 1
	fi

	#Make sure the device is really empty
	echo -e "Running file check on your device...\n"

	#Make sure an /mnt/tmp doesn't exist from an earlier exit of
	#our script
	if [[ -d /mnt/tmp ]]
	then
		sudo umount /mnt/tmp 2>/dev/null >/dev/null
	else
		sudo mkdir -p /mnt/tmp
	fi

	sudo mount $HOME_DEV /mnt/tmp 2>/dev/null

	#Check if there were problems mounting the device
	if [[ "$?" != 0 ]]
	then
		ECHO "There was a problem with the device you gave. It would not mount. If this is a brand new drive and the partition has never been formatted, please format it as ext4 before running this script. Otherwise, please fix the problem before rerunning the script."
		echo
		echo "Exiting..."
		sudo rmdir /mnt/tmp
		exit 1
	fi

	#If user hits Ctrl+C, unmount /mnt/tmp
	trap 'sudo umount /mnt/tmp 2>/dev/null && sudo rmdir /mnt/tmp; echo; exit 1' SIGINT

	#Count how many files are on the newly mounted device
	FILE_COUNT=`sudo ls -lR /mnt/tmp | grep ^- | wc -l`
	if [[ "$FILE_COUNT" -gt 0 ]]
	then
		clear
		ECHO "The device you chose is NOT empty! Are you sure you want to delete all data on it? Type \"I am sure\" to proceed, or \"ls\" to see what's on the device you chose."
		echo
		read -p "Your choice: " answer

		#Convert answer to lowercase
		answer=$(toLower $answer)

		echo

		if [[ "$answer" == "ls" ]]
		then
			#Without running in the background, nautilus doesn't release the terminal
			nautilus /mnt/tmp 2>/dev/null >/dev/null &
			clear
			echo "Do you still wish to format the device and erase all this data? Type \"I do\" to proceed or anything else to exit." | fmt -w `tput cols`
			echo
			read -p "Your choice: " answer

			#Convert answer to lowercase
			answer=$(toLower $answer)

			if [[ "$answer" == "i do" ]]
			then
				echo -e "Formatting $HOME_DEV\n"
			else
				echo "Exiting..."
				sudo umount /mnt/tmp && sudo rmdir /mnt/tmp
				exit 1
			fi
		elif [[ "$answer" == "i am sure" ]]
		then
			echo -e "Formatting $HOME_DEV\n"
		else
			echo "$answer is an invalid choice"
			echo "Exiting..."
			sudo umount /mnt/tmp && sudo rmdir /mnt/tmp
			exit 1
		fi
	else
		echo "Everything checks out."
		echo -e "Formatting $HOME_DEV\n"
	fi

	#Unmount the device
	sudo umount /mnt/tmp
	sudo rmdir /mnt/tmp

	#Clear trap
	trap - SIGINT

	#Format the device
	sudo mkfs.ext4 -L home $HOME_DEV

	#Check if there was a problem formatting the device
	if [[ "$?" != 0 ]]
	then
		echo
		echo "Formatting $HOME_DEV failed."
		echo "Exiting..."
		exit 1
	else
		echo "$HOME_DEV formatted successfully"
		sleep 4
	fi
}
